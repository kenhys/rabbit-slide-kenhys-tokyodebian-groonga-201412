= DebianとFedoraで\nパッケージを\nリリースするまでの話

: author
  林健太郎
: institution
  株式会社クリアコード
: content-source
  東京Debian勉強会
: date
  2014/12/20
: allotted-time
  30m
: theme
  .

= 今日の内容

  * 第一部(Debian編)

    * Groongaの紹介
    * 新規パッケージについて

  * 第二部(Fedora編)

    * Cutterの紹介
    * 新規パッケージ/更新について

= はじめに

  * スピーカーの立ち位置

    * Groonga Projectの中の人
    * おもにリリース関連\n
      (('note: (2012/05〜2014/03までリリースマネージャ)'))

= 具体的な内容の前に

  * 技術的に踏み込んだ内容はなし

    (('note: なので気楽に聞いてもらえばOK'))

  * あくまで個人の見解です

    (('note: Fedoraだとこんな感じというのをつかんでもらえばOK'))

  * 公開済みのブログのエントリをもとにしています

    (('note: 新たな知見が得られるとは限りません'))

= Groongaとは

  # image
  # src = https://raw.githubusercontent.com/groonga/groonga/master/data/images/logo/groonga-icon-full-size.svg
  # relative_height = 100

= Groongaとは

  * 「ぐるんが」
  * カラムストア機能つき全文検索エンジン
  * Sennaの後継プロダクト

= Groonga族

  * Groonga
  * Mroonga(むるんが)
  * Rroonga(るるんが)
  * Droonga(どぅるんが)

    (('note: 他にもNroongaとかHaroongaとかいろいろあるよ！'))

= Groonga族って

  * Mroonga

    * Groongaをストレージエンジンとして使う

  * Rroonga

    * RubyからGroongaを扱える

  * Droonga

    * ((*D*))istributed Groonga

= Groongaを楽々インストール

  * Debian
  * Ubuntu
  * CentOS
  * Fedora

= Debianでも\n楽々インストール

  * stable
  * (('del: testing'))
  * (('del: unstable'))

    * (('note: 以前はtestingやunstableもプロジェクト公式で対応'))

= Ubuntuでも\n楽々インストール

  * 12.04 LTS
  * 14.04 LTS
  * 14.10

    * (('note: だいたいEOLに合わせて対応打ち切り'))
    * (('note: PPAでパッケージを提供へと移行'))

= CentOSでも\n楽々インストール

  * CentOS 5
  * CentOS 6
  * CentOS 7

= Fedoraでも\n楽々インストール

  * Fedora 19
  * Fedora 20
  * Fedora 21

    * (('note: Fedora公式でのリリースへ移行'))

= 楽々インストールの明暗

  * ユーザー視点

    * ((*自分の環境*))がサポートされていると嬉しい
    * ソースからビルドは敷居が高い

  * 開発者視点

    * どこまでサポートするのか
    * 手広くサポートするコストの負担

= パッケージのビルドは大変

  * Debian
    * (('note: 各リリース & i386/amd64'))
  * Ubuntu
    * (('note: 各リリース & i386/amd64'))
  * CentOS
    * (('note: 各リリース & i386/amd64'))
  * Fedora
    * (('note: 各リリース & i386/amd64'))

= 準備が大変な理由

  * 元々はすべてchrootでビルド
  * Groongaのビルドって重い
  * リリースごとに10数回のビルド
  * ビルド専用マシンがあったことも
  * rinseつらくなってきた

= ビルド環境の移行(deb系)

  * Debian
    * chroot (('&#x279F;')) Vagrantへ移行
    * testing,unstable対応打ち切り

  * Ubuntu
    * chroot (('&#x279F;')) PPAへ移行

= ビルド環境の移行(rpm系)

  * CentOS
    * chroot (('&#x279F;')) Vagantへ移行
  * Fedora
    * chroot (('&#x279F;')) 公式でのリリースヘ移行

= ホスティング環境の移行

  * 元々他サービスと同居

    ((*(('&#x2B07;'))*))

  * packages.groonga.orgを外部へ
  * ConoHa支援プログラムを利用

    * https://www.conoha.jp/community

= Debianへ\n新規パッケージを\n投入するまで

  # image
  # src = https://raw.githubusercontent.com/groonga/groonga/master/data/images/logo/groonga-icon-full-size.svg
  # relative_height = 100

= きっかけ

  * 時は、2013年11月29日

    * 全文検索エンジンGroongaを囲む夕べ4
    * やまねさんを紹介された
    * GroongaのDebian入りを目指すことに

= まずはWNPP

  * 2013/12/13 はじめてのITP

    * このときのGroongaは3.0.1

    (('note: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=732055'))

= WNPPについてまとめた

  * Debianでパッケージを\nリリースできるようにしたい - WNPPへのバグ登録

    (('note: http://www.clear-code.com/blog/2014/3/7.html'))

= パッケージを手直し

  * 2014/01頃

    * コメントをうけてパッケージを修正
    * upstreamにもとりこんでいく

= ようやくNew Queueへ

  * 2014/02頃

    * やまねさんにGroonga 4.0.0をNew Queueにアップロードしてもらう

= Lintianについてまとめた

  * Debianでパッケージを\nリリースできるようにしたい\n - よりDebianらしく

    (('note: http://www.clear-code.com/blog/2014/4/3.html'))

= mentors.debian.netに\nついてまとめた

  * Debianでパッケージを\nリリースできるようにしたい\n - mentors.debian.netの使いかた

    (('note: http://www.clear-code.com/blog/2014/7/2.html'))

= New Queueどうなった？

  * 2014/05/15

    * ftp-masterのチェックまで約3ヶ月
    * debian/copyrightの不備が原因でrejectされる
    * 審査待ちの間にLintianのチェックが強化

= 再チャレンジ

  * 2014/09頃

    * Jessieの足音が聞こえはじめた
    * やまねさんによる「進捗どうですか」
    * このときGroongaは4.0.5

      (('note: 空白期間があるのはお察しください'))

= 再びreject

  * 2014/10/10

    * ftp-masterのチェックまで約1ヶ月
    * またしてもdebian/copyrightの不備
    * Sphinxのバンドルしているjsへの言及が漏れていた

= 再々チャレンジ

  * 2014/10/15頃

    * このときGroongaは4.0.6

= 祝Debian入り

  * 2014/10/21
  * 経緯をざっくりまとめ

    * Debianでパッケージを\nリリースできるようにしたい\n - そしてDebianへ

      (('note: http://www.clear-code.com/blog/2014/10/31.html'))

= Cowbuilderについてまとめ

  * Ubuntuでdebパッケージの\nお手軽クリーンルーム\nビルド環境を構築するには

    (('note: http://www.clear-code.com/blog/2014/11/21.html'))

  * ディスク容量がカツカツでないならpbuilderよりcowbuilderおすすめ

= Piupartsについてまとめ

  * Ubuntuでdebパッケージの\nテストをするには

    (('note: http://www.clear-code.com/blog/2014/12/1.html'))

  * cowbuilder & lintian & piupartsのコンボがおすすめ

= Debianでの教訓

  * debian/copyrightは入念にチェックを
    * licensecheck -rおすすめ
  * New Queueに入ってからが勝負
  * ftp-master待ちの間にlintian強化(('&#x279C;'))rejectのコンボでも泣かない

= Cutterとは

  # image
  # src = https://raw.githubusercontent.com/clear-code/cutter/master/data/icons/kinotan/default.png
  # relative_height = 50

= Cutterとは

  * 書きやすさを重視したC/C++向けテスティングフレームワークのひとつ。
  * Debianでは簡単にインストール

      % apt-get install -y cutter-testing-framework

    * ただし、バージョンがやや古い

= Cutterを\nFedora入りさせた動機(1)

  * すでにFedoraにGroongaはあった
  * でも毎月リリースに追従していない
  * Fedora公式でメンテしていく方向性にしたい

= Cutterを\nFedora入りさせた動機(2)

  * でも実績積んでないので何か新規パッケージを
  * いわば予行演習

= はじめにすること

  * specとSRPMを用意
  * BugzillaへのReview Request

  * FE-NEEDSPONSORフラグを立ててスポンサーを募る

= Cutterの場合

  * 2012/12/17

    * Review Requestを投げた

      (('note: https://bugzilla.redhat.com/show_bug.cgi?id=887778'))

    * Fedora 17の時代
    * このときのCutterは1.2.2

= レビューの一つの壁

  * スポンサーを探すこと
  * スポンサー権限のないレビューはunofficial扱い

= スポンサーがついたら

  * レビューと修正のくりかえし
  * DebianでいうDDとのやりとり

= レビューを通ったら？

  * 2013/02/05

    * SCMリクエストを投げる

      * パッケージのリポジトリを作成してもらう
      * 晴れてpackagerになれる

= 権限

  * sponsor

    * 新規packagerを追加できる
    * DebianでいうDDっぽい役割

  * packager

    * packagersグループの一員
    * 担当するパッケージのコミット権
    * アップロードまでできる

= 新規パッケージについてまとめ

  * Fedoraプロジェクトで\n新規パッケージをリリースする方法

    (('note: http://www.clear-code.com/blog/2013/4/10.html'))

= パッケージの更新方法まとめ

  * Fedoraプロジェクトで\nパッケージを更新するには

    (('note: http://www.clear-code.com/blog/2013/7/17.html'))

